#+title: Noired Theme
#+author: Francisco Cornejo-Garcia
#+property: header-args:emacs-lisp :tangle yes :mkdirp yes

* Setup
  #+begin_src emacs-lisp

    (require 'autothemer)
    (autothemer-deftheme
     noired "A minimalistic monochrome dark theme with red highlights"
     ((((class color) (min-colors #xFFFFFF)))

  #+end_src

* Colors
  #+begin_src emacs-lisp

    (noired-black     "#000000")
    (noired-rd-gray   "#0a0a0a")
    (noired-bg-gray   "#121212")
    (noired-dk-gray   "#585858")
    (noired-at-gray   "#8a8a8a")
    (noired-gray      "#bcbcbc")
    (noired-lt-gray   "#d0d0d0")
    (noired-white     "#eeeeee")
    (noired-dk-red    "#870000")
    (noired-red       "#ff0000")
    (noired-yellow    "#ffff00")
    (noired-green     "#00ff00"))

  #+end_src
  
* Standard
  #+begin_src emacs-lisp

    ((default             (:background noired-black   :foreground noired-gray))
     (shadow              (:foreground noired-dk-gray))
     (success             (:foreground noired-green   :weight 'bold))
     (error               (:foreground noired-red     :weight 'bold))
     (warning             (:foreground noired-white   :weight 'bold))
     (link                (:foreground noired-lt-gray :underline t))
     (region              (:background noired-red))
     (secondary-selection (:background noired-rd-gray))

  #+end_src

* Font Lock
  #+begin_src emacs-lisp

    (font-lock-builtin-face       (:foreground noired-white))
    (font-lock-keyword-face       (:foreground noired-white))
    (font-lock-type-face          (:foreground noired-white))
    (font-lock-constant-face      (:foreground noired-red))
    (font-lock-string-face        (:foreground noired-red))
    (font-lock-function-name-face (:foreground noired-gray))
    (font-lock-variable-name-face (:foreground noired-gray))
    (font-lock-comment-face       (:foreground noired-dk-gray))

  #+end_src

* Highlight
  #+begin_src emacs-lisp

    (highlight      (:background noired-bg-gray))
    (lazy-highlight (:background noired-lt-gray :foreground noired-black))
    (match          (:background noired-dk-gray))

  #+end_src

* Frame
  #+begin_src emacs-lisp

    (fringe            (:background noired-black))
    (cursor            (:background noired-red))
    (minibuffer-prompt (:foreground noired-white))

  #+end_src

* Line Number
   #+begin_src emacs-lisp

     (line-number                    (:foreground noired-dk-gray))
     (line-number-current-line       (:foreground noired-red))
     (highlight-numbers-number (:foreground noired-red))

   #+end_src

* Modeline
  #+begin_src emacs-lisp

    (mode-line          (:foreground noired-at-gray :background noired-black))
    (mode-line-inactive (:foreground noired-dk-gray :background noired-black))

  #+end_src

* Parentheses
  #+begin_src emacs-lisp

    (show-paren-match           (:background noired-dk-red))
    (show-paren-mismatch        (:background noired-red))

  #+end_src
  
* Ivy
  #+begin_src emacs-lisp

    (ivy-cursor (:foreground noired-black :background noired-white))
    (ivy-current-match (:extend t :background noired-red :foreground noired-black))
    (ivy-minibuffer-match-face-1 (:background noired-white))
    (ivy-minibuffer-match-face-2 (:weight 'bold :background noired-dk-gray))
    (ivy-minibuffer-match-face-3 (:weight 'bold :background noired-dk-gray))
    (ivy-minibuffer-match-face-4 (:weight 'bold :background noired-dk-gray))
    (ivy-confirm-face (:foreground noired-bg-gray :inherit 'minibuffer-prompt))
    (ivy-match-required-face (:foreground noired-red :inherit 'minibuffer-prompt))
    (ivy-remote (:foreground noired-at-gray))

  #+end_src
* Evil Ex
  #+begin_src emacs-lisp

    (evil-ex-substitute-replacement (:underline t :foreground noired-red))
    (evil-ex-info (:slant 'italic :foreground noired-red))

  #+end_src

* Org
   #+begin_src emacs-lisp
     (org-drawer                  (:foreground noired-dk-gray))
     (org-column                  (:background noired-rd-gray))
     (org-column-title            (:background noired-rd-gray))
     (org-footnote                (:underline t :foreground noired-green))
     (org-ellipsis                (:underline t :foreground noired-lt-gray))
     (org-date                    (:foreground noired-red :underline t))
     (org-date-selected           (:inverse-video t :foreground noired-lt-gray))
     (org-sexp-date               (:foreground noired-red))
     (org-tag                     (:foreground noired-dk-gray :weight 'bold))
     (org-todo                    (:foreground noired-red     :weight 'bold))
     (org-done                    (:foreground noired-green   :weight 'bold))
     (org-agenda-done             (:foreground noired-green))
     (org-headline-done           (:foreground noired-gray))
     (org-table                   (:foreground noired-gray))
     (org-formula                 (:foreground noired-red))
     (org-document-title          (:foreground noired-red))
     (org-document-info           (:foreground noired-red))
     (org-block                   (:extend t :background noired-rd-gray))
     (org-clock-overlay           (:foreground noired-white))
     (org-agenda-structure        (:foreground noired-lt-gray))
     (org-scheduled               (:foreground noired-green :weight 'bold))
     (org-scheduled-today         (:foreground noired-gray :weight 'bold))
     (org-agenda-dimmed-todo-face (:foreground noired-dk-gray))
     (org-scheduled-previously    (:foreground noired-red :weight 'bold))
     (org-upcoming-deadline       (:foreground noired-red))
     (org-agenda-restriction-lock (:background noired-lt-gray))
     (org-time-grid               (:foreground noired-lt-gray))
     (org-latex-and-related       (:foreground noired-lt-gray))
     (org-mode-line-clock-overrun (:background noired-red :inherit 'mode-line))
     (holiday                     (:background noired-dk-red))
   #+end_src
* Load Theme
  #+begin_src emacs-lisp
    ))
    (provide-theme 'noired)
  #+end_src
  
